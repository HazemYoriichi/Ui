--// Enhanced Limitless UI Library Script with All Features
getgenv().namehub = "Limitless Hub - Complete"

local UserInputService = game:GetService('UserInputService')
local LocalPlayer = game:GetService('Players').LocalPlayer
local TweenService = game:GetService('TweenService')
local HttpService = game:GetService('HttpService')
local CoreGui = game:GetService('CoreGui')
local Mouse = LocalPlayer:GetMouse()
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')

-- Enhanced Library with all Limitless UI features
local Limitless = {
    connections = {},
    Flags = {},
    Enabled = true,
    slider_drag = false,
    core = nil,
    dragging = false,
    drag_position = nil,
    start_position = nil,
    -- Added theme system
    themes = {},
    currentTheme = "Dark",
    notificationLower = false,
    currentFont = "rbxasset://fonts/families/Montserrat.json",
    notifications = {},
    popups = {}
}

-- Added default themes
Limitless.themes["Dark"] = {
    Name = "Dark",
    Accent = "#18181b",
    Dialog = "#18181b", 
    Outline = "#FFFFFF",
    Text = "#FFFFFF",
    Placeholder = "#999999",
    Background = "#0e0e10",
    Button = "#52525b",
    Icon = "#a1a1aa"
}

Limitless.themes["Light"] = {
    Name = "Light",
    Accent = "#f4f4f5",
    Dialog = "#ffffff",
    Outline = "#000000", 
    Text = "#000000",
    Placeholder = "#666666",
    Background = "#ffffff",
    Button = "#e4e4e7",
    Icon = "#52525b"
}

if not isfolder("limitless hub") then
    makefolder("limitless hub")
end

-- Added theme management functions
function Limitless:AddTheme(themeData)
    self.themes[themeData.Name] = themeData
end

function Limitless:SetTheme(themeName)
    if self.themes[themeName] then
        self.currentTheme = themeName
        -- Apply theme to existing UI elements
        self:ApplyTheme()
    end
end

function Limitless:GetThemes()
    local themeList = {}
    for name, _ in pairs(self.themes) do
        table.insert(themeList, name)
    end
    return themeList
end

function Limitless:GetCurrentTheme()
    return self.currentTheme
end

function Limitless:ApplyTheme()
    local theme = self.themes[self.currentTheme]
    if not theme or not self.core then return end
    
    -- Apply theme colors to UI elements
    for _, obj in pairs(self.core:GetDescendants()) do
        if obj:IsA("Frame") and obj.Name == "Container" then
            obj.BackgroundColor3 = Color3.fromHex(theme.Background)
        elseif obj:IsA("TextLabel") then
            obj.TextColor3 = Color3.fromHex(theme.Text)
        end
    end
end

-- Added notification system
function Limitless:SetNotificationLower(enabled)
    self.notificationLower = enabled
end

function Limitless:Notify(data)
    local title = data.Title or "Notification"
    local content = data.Content or ""
    local duration = data.Duration or 3
    local icon = data.Icon or "bell"
    
    local notification = Instance.new("Frame")
    notification.Name = "Notification"
    notification.Size = UDim2.new(0, 300, 0, 80)
    notification.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
    notification.BorderSizePixel = 0
    notification.Parent = self.core
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = notification
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -20, 0, 25)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.FontFace = Font.new(self.currentFont, Enum.FontWeight.Bold)
    titleLabel.Parent = notification
    
    local contentLabel = Instance.new("TextLabel")
    contentLabel.Name = "Content"
    contentLabel.Size = UDim2.new(1, -20, 0, 40)
    contentLabel.Position = UDim2.new(0, 10, 0, 30)
    contentLabel.BackgroundTransparency = 1
    contentLabel.Text = content
    contentLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    contentLabel.TextScaled = true
    contentLabel.FontFace = Font.new(self.currentFont, Enum.FontWeight.Regular)
    contentLabel.TextWrapped = true
    contentLabel.Parent = notification
    
    -- Position notification
    if self.notificationLower then
        notification.Position = UDim2.new(1, -320, 1, -100 - (#self.notifications * 90))
    else
        notification.Position = UDim2.new(1, -320, 0, 20 + (#self.notifications * 90))
    end
    
    table.insert(self.notifications, notification)
    
    -- Animate in
    notification.Position = notification.Position + UDim2.new(0, 320, 0, 0)
    TweenService:Create(notification, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Position = notification.Position - UDim2.new(0, 320, 0, 0)
    }):Play()
    
    -- Auto remove
    task.wait(duration)
    TweenService:Create(notification, TweenInfo.new(0.3), {
        Position = notification.Position + UDim2.new(0, 320, 0, 0)
    }):Play()
    
    task.wait(0.3)
    notification:Destroy()
    
    -- Remove from notifications table
    for i, notif in ipairs(self.notifications) do
        if notif == notification then
            table.remove(self.notifications, i)
            break
        end
    end
end

-- Added popup system
function Limitless:Popup(data)
    local title = data.Title or "Popup"
    local content = data.Content or ""
    local buttons = data.Buttons or {{"OK", function() end}}
    
    local popup = Instance.new("Frame")
    popup.Name = "Popup"
    popup.Size = UDim2.new(0, 400, 0, 200)
    popup.Position = UDim2.new(0.5, -200, 0.5, -100)
    popup.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
    popup.BorderSizePixel = 0
    popup.Parent = self.core
    popup.ZIndex = 1000
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = popup
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 0, 30)
    titleLabel.Position = UDim2.new(0, 10, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.FontFace = Font.new(self.currentFont, Enum.FontWeight.Bold)
    titleLabel.Parent = popup
    
    local contentLabel = Instance.new("TextLabel")
    contentLabel.Size = UDim2.new(1, -20, 0, 100)
    contentLabel.Position = UDim2.new(0, 10, 0, 50)
    contentLabel.BackgroundTransparency = 1
    contentLabel.Text = content
    contentLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    contentLabel.TextScaled = true
    contentLabel.FontFace = Font.new(self.currentFont, Enum.FontWeight.Regular)
    contentLabel.TextWrapped = true
    contentLabel.Parent = popup
    
    -- Create buttons
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, -20, 0, 40)
    buttonFrame.Position = UDim2.new(0, 10, 1, -50)
    buttonFrame.BackgroundTransparency = 1
    buttonFrame.Parent = popup
    
    local buttonLayout = Instance.new("UIListLayout")
    buttonLayout.FillDirection = Enum.FillDirection.Horizontal
    buttonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    buttonLayout.Padding = UDim.new(0, 10)
    buttonLayout.Parent = buttonFrame
    
    for _, buttonData in ipairs(buttons) do
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 80, 1, 0)
        button.BackgroundColor3 = Color3.fromRGB(66, 89, 182)
        button.BorderSizePixel = 0
        button.Text = buttonData[1]
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.FontFace = Font.new(self.currentFont, Enum.FontWeight.SemiBold)
        button.Parent = buttonFrame
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = button
        
        button.MouseButton1Click:Connect(function()
            popup:Destroy()
            buttonData[2]()
        end)
    end
    
    table.insert(self.popups, popup)
    return popup
end

-- Added font management
function Limitless:SetFont(fontId)
    self.currentFont = fontId
    self:ApplyTheme() -- Reapply to update fonts
end

-- Added window transparency and size functions
function Limitless:GetTransparency()
    return self.core and self.core.Container.BackgroundTransparency > 0
end

function Limitless:GetWindowSize()
    return self.core and self.core.Container.Size or UDim2.new(0, 699, 0, 426)
end


function Limitless:disconnect()
    for _, value in Limitless.connections do
        if not Limitless.connections[value] then
            continue
        end
        Limitless.connections[value]:Disconnect()
        Limitless.connections[value] = nil
    end
end

function Limitless:clear()
    for _, object in CoreGui:GetChildren() do
        if object.Name ~= "limitless" then
            continue
        end
        object:Destroy()
    end
end

function Limitless:exist()
    if not Limitless.core then return end
    if not Limitless.core.Parent then return end
    return true
end

function Limitless:save_flags()
    if not Limitless.exist() then return end
    local flags = HttpService:JSONEncode(Limitless.Flags)
    writefile(`limitless hub/{game.GameId}.lua`, flags)
end

function Limitless:load_flags()
    if not isfile(`limitless hub/{game.GameId}.lua`) then Limitless.save_flags() return end
    local flags = readfile(`limitless hub/{game.GameId}.lua`)
    if not flags then Limitless.save_flags() return end
    Limitless.Flags = HttpService:JSONDecode(flags)
end

Limitless.load_flags()
Limitless.clear()

function Limitless:play_startup_sound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://6114974207"
    sound.Volume = 0.5
    sound.PlayOnRemove = true
    sound.Parent = workspace
    sound:Destroy()
end

function Limitless:create_startup_effects(container)
    local particles = Instance.new("Frame")
    particles.Name = "StartupParticles"
    particles.Parent = container
    particles.Size = UDim2.new(1, 0, 1, 0)
    particles.BackgroundTransparency = 1
    particles.ZIndex = 1000
    
    for i = 1, 15 do
        local particle = Instance.new("Frame")
        particle.Parent = particles
        particle.Size = UDim2.new(0, math.random(3, 8), 0, math.random(3, 8))
        particle.Position = UDim2.new(math.random(0, 100) / 100, 0, math.random(0, 100) / 100, 0)
        particle.BackgroundColor3 = Color3.fromHSV(math.random(0, 360) / 360, 0.8, 1)
        particle.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = particle
        
        local tween = TweenService:Create(particle, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Position = UDim2.new(math.random(-20, 120) / 100, 0, math.random(-20, 120) / 100, 0),
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 0, 0, 0)
        })
        tween:Play()
        
        task.wait(0.1)
    end
    
    task.wait(2)
    particles:Destroy()
end

function Limitless:open()
    self.Container.Visible = true
    self.Shadow.Visible = true
    self.Mobile.Modal = true
    
    self.Container.Size = UDim2.new(0, 0, 0, 0)
    self.Shadow.Size = UDim2.new(0, 0, 0, 0)
    
    local openTween1 = TweenService:Create(self.Container, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 699, 0, 426)
    })
    local openTween2 = TweenService:Create(self.Shadow, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 776, 0, 509)
    })
    
    openTween1:Play()
    openTween2:Play()
end

function Limitless:close()
    local closeTween1 = TweenService:Create(self.Shadow, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0)
    })
    local closeTween2 = TweenService:Create(self.Container, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0)
    })
    
    closeTween1:Play()
    closeTween2:Play()
    
    closeTween2.Completed:Once(function()
        if Limitless.enabled then
            return
        end
        self.Container.Visible = false
        self.Shadow.Visible = false
        self.Mobile.Modal = false
    end)
end

function Limitless:drag()
    if not Limitless.drag_position then
        return
    end
    
    if not Limitless.start_position then
        return
    end
    
    local delta = self.input.Position - Limitless.drag_position
    local position = UDim2.new(Limitless.start_position.X.Scale, Limitless.start_position.X.Offset + delta.X, Limitless.start_position.Y.Scale, Limitless.start_position.Y.Offset + delta.Y)
    TweenService:Create(self.container.Container, TweenInfo.new(0.2), {
        Position = position
    }):Play()
    TweenService:Create(self.container.Shadow, TweenInfo.new(0.2), {
        Position = position
    }):Play()
end

function Limitless:visible()
    Limitless.enabled = not Limitless.enabled
    if Limitless.enabled then
        Limitless.open(self)
    else
        Limitless.close(self)
    end
end

-- Enhanced CreateWindow function with all options
function Limitless:CreateWindow(options)
    local title = options.Title or "Limitless Hub"
    local icon = options.Icon or "door-open"
    local author = options.Author or "Limitless"
    local size = options.Size or UDim2.new(0, 699, 0, 426)
    local theme = options.Theme or "Dark"
    local resizable = options.Resizable ~= false
    local keySystem = options.KeySystem or false
    
    if keySystem then
        -- Implement key system logic here
    end
    
    self:SetTheme(theme)
    
    local container = Instance.new("ScreenGui")
    container.Name = "limitless"
    container.Parent = CoreGui
    Limitless.core = container

    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.Parent = container
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Shadow.BackgroundTransparency = 1.000
    Shadow.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.BorderSizePixel = 0
    Shadow.Position = UDim2.new(0.508668244, 0, 0.5, 0)
    Shadow.Size = UDim2.new(0, 776, 0, 509)
    Shadow.ZIndex = 0
    Shadow.Image = "rbxassetid://17290899982"

    local Container = Instance.new("Frame")
    Container.Name = "Container"
    Container.Parent = container
    Container.AnchorPoint = Vector2.new(0.5, 0.5)
    Container.BackgroundColor3 = Color3.fromRGB(19, 20, 24)
    Container.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Container.BorderSizePixel = 0
    Container.ClipsDescendants = true
    Container.Position = UDim2.new(0.5, 0, 0.5, 0)
    Container.Size = UDim2.new(0, 699, 0, 426)

    local ContainerCorner = Instance.new("UICorner")
    ContainerCorner.CornerRadius = UDim.new(0, 20)
    ContainerCorner.Parent = container.Container

    local Top = Instance.new("ImageLabel")
    Top.Name = "Top"
    Top.Parent = Container
    Top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Top.BackgroundTransparency = 1.000
    Top.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Top.BorderSizePixel = 0
    Top.Size = UDim2.new(0, 699, 0, 39)
    Top.Image = ""

    local Logo = Instance.new("ImageLabel")
    Logo.Name = "Logo"
    Logo.Parent = Top
    Logo.AnchorPoint = Vector2.new(0.5, 0.5)
    Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Logo.BackgroundTransparency = 1.000
    Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Logo.BorderSizePixel = 0
    Logo.Position = UDim2.new(0.0387367606, 0, 0.5, 0)
    Logo.Size = UDim2.new(0, 30, 0, 25)
    Logo.Image = ""
    
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = Top
    TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0.15, 0, 0.5, 0)
    TextLabel.Size = UDim2.new(0, 200, 0, 20)
    TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Bold)
    TextLabel.Text = getgenv().namehub
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 18.000
    TextLabel.TextWrapped = true
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local titleGradient = Instance.new("UIGradient")
    titleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(66, 89, 182)), 
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(255, 255, 255)), 
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(37, 57, 137))
    }
    titleGradient.Parent = TextLabel
    
    spawn(function()
        while TextLabel.Parent do
            for i = 0, 360, 5 do
                if not TextLabel.Parent then break end
                titleGradient.Rotation = i
                task.wait(0.05)
            end
        end
    end)

    local Line = Instance.new("Frame")
    Line.Name = "Line"
    Line.Parent = Container
    Line.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
    Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Line.BorderSizePixel = 0
    Line.Position = UDim2.new(0.296137333, 0, 0.0915492922, 0)
    Line.Size = UDim2.new(0, 2, 0, 387)

    local tabs = Instance.new("ScrollingFrame")
    tabs.Name = "Tabs"
    tabs.Active = true
    tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabs.BackgroundTransparency = 1.000
    tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tabs.BorderSizePixel = 0
    tabs.Position = UDim2.new(0, 0, 0.0915492922, 0)
    tabs.Size = UDim2.new(0, 209, 0, 386)
    tabs.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
    tabs.ScrollBarThickness = 0
    tabs.Parent = container.Container

    local tabslist = Instance.new("UIListLayout")
    tabslist.Parent = tabs
    tabslist.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tabslist.SortOrder = Enum.SortOrder.LayoutOrder
    tabslist.Padding = UDim.new(0, 9)

    local UIPadding = Instance.new("UIPadding")
    UIPadding.Parent = tabs
    UIPadding.PaddingTop = UDim.new(0, 15)

    local tabsCorner = Instance.new("UICorner")
    tabsCorner.Parent = tabs

    local mobile_button = Instance.new("TextButton")
    mobile_button.Name = "Mobile"
    mobile_button.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
    mobile_button.BorderColor3 = Color3.fromRGB(0, 0, 0)
    mobile_button.BorderSizePixel = 0
    mobile_button.Position = UDim2.new(0.0210955422, 0, 0.89, 0)
    mobile_button.Size = UDim2.new(0, 122, 0, 38)
    mobile_button.AutoButtonColor = false
    mobile_button.Modal = true
    mobile_button.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
    mobile_button.Text = ""
    mobile_button.TextColor3 = Color3.fromRGB(0, 0, 0)
    mobile_button.TextSize = 14.000
    mobile_button.Parent = container

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 13)
    UICorner.Parent = mobile_button

    local shadowMobile = Instance.new("ImageLabel")
    shadowMobile.Name = "Shadow"
    shadowMobile.Parent = mobile_button
    shadowMobile.AnchorPoint = Vector2.new(0.5, 0.5)
    shadowMobile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    shadowMobile.BackgroundTransparency = 1.000
    shadowMobile.BorderColor3 = Color3.fromRGB(0, 0, 0)
    shadowMobile.BorderSizePixel = 0
    shadowMobile.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadowMobile.Size = UDim2.new(0, 144, 0, 58)
    shadowMobile.ZIndex = 0
    shadowMobile.Image = "rbxassetid://17183270335"
    shadowMobile.ImageTransparency = 0.200

    local State = Instance.new("TextLabel")
    State.Name = "State"
    State.Parent = mobile_button
    State.AnchorPoint = Vector2.new(0.5, 0.5)
    State.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    State.BackgroundTransparency = 1.000
    State.BorderColor3 = Color3.fromRGB(0, 0, 0)
    State.BorderSizePixel = 0
    State.Position = UDim2.new(0.646000028, 0, 0.5, 0)
    State.Size = UDim2.new(0, 64, 0, 15)
    State.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
    State.Text = "Open"
    State.TextColor3 = Color3.fromRGB(255, 255, 255)
    State.TextScaled = true
    State.TextSize = 14.000
    State.TextWrapped = true
    State.TextXAlignment = Enum.TextXAlignment.Left

    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Parent = mobile_button
    Icon.AnchorPoint = Vector2.new(0.5, 0.5)
    Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Icon.BackgroundTransparency = 1.000
    Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Icon.BorderSizePixel = 0
    Icon.Position = UDim2.new(0.268000007, 0, 0.5, 0)
    Icon.Size = UDim2.new(0, 15, 0, 15)
    Icon.Image = "rbxassetid://17183279677"

    -- User Info Section
    local UserInfo = Instance.new("Frame")
    UserInfo.Name = "UserInfo"
    UserInfo.Parent = container
    UserInfo.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
    UserInfo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserInfo.BorderSizePixel = 0
    UserInfo.Position = UDim2.new(0.0210955422, 0, 0.82, 0)
    UserInfo.Size = UDim2.new(0, 180, 0, 35)

    local UserInfoCorner = Instance.new("UICorner")
    UserInfoCorner.CornerRadius = UDim.new(0, 10)
    UserInfoCorner.Parent = UserInfo

    local UserInfoShadow = Instance.new("ImageLabel")
    UserInfoShadow.Name = "Shadow"
    UserInfoShadow.Parent = UserInfo
    UserInfoShadow.AnchorPoint = Vector2.new(0.5, 0.5)
    UserInfoShadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UserInfoShadow.BackgroundTransparency = 1.000
    UserInfoShadow.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserInfoShadow.BorderSizePixel = 0
    UserInfoShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    UserInfoShadow.Size = UDim2.new(0, 200, 0, 50)
    UserInfoShadow.ZIndex = 0
    UserInfoShadow.Image = "rbxassetid://17183270335"
    UserInfoShadow.ImageTransparency = 0.300

    -- User Avatar
    local UserAvatar = Instance.new("ImageLabel")
    UserAvatar.Name = "Avatar"
    UserAvatar.Parent = UserInfo
    UserAvatar.AnchorPoint = Vector2.new(0.5, 0.5)
    UserAvatar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UserAvatar.BackgroundTransparency = 1.000
    UserAvatar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserAvatar.BorderSizePixel = 0
    UserAvatar.Position = UDim2.new(0.15, 0, 0.5, 0)
    UserAvatar.Size = UDim2.new(0, 25, 0, 25)
    UserAvatar.ZIndex = 2

    local AvatarCorner = Instance.new("UICorner")
    AvatarCorner.CornerRadius = UDim.new(0, 12)
    AvatarCorner.Parent = UserAvatar

    -- User Name
    local UserName = Instance.new("TextLabel")
    UserName.Name = "UserName"
    UserName.Parent = UserInfo
    UserName.AnchorPoint = Vector2.new(0, 0.5)
    UserName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UserName.BackgroundTransparency = 1.000
    UserName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserName.BorderSizePixel = 0
    UserName.Position = UDim2.new(0.32, 0, 0.35, 0)
    UserName.Size = UDim2.new(0, 110, 0, 12)
    UserName.ZIndex = 2
    UserName.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
    UserName.Text = LocalPlayer.Name
    UserName.TextColor3 = Color3.fromRGB(255, 255, 255)
    UserName.TextScaled = true
    UserName.TextSize = 12.000
    UserName.TextWrapped = true
    UserName.TextXAlignment = Enum.TextXAlignment.Left

    -- User Display Name (if different from username)
    local UserDisplayName = Instance.new("TextLabel")
    UserDisplayName.Name = "DisplayName"
    UserDisplayName.Parent = UserInfo
    UserDisplayName.AnchorPoint = Vector2.new(0, 0.5)
    UserDisplayName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UserDisplayName.BackgroundTransparency = 1.000
    UserDisplayName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserDisplayName.BorderSizePixel = 0
    UserDisplayName.Position = UDim2.new(0.32, 0, 0.65, 0)
    UserDisplayName.Size = UDim2.new(0, 110, 0, 10)
    UserDisplayName.ZIndex = 2
    UserDisplayName.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Regular)
    UserDisplayName.Text = "@" .. LocalPlayer.Name
    UserDisplayName.TextColor3 = Color3.fromRGB(180, 180, 180)
    UserDisplayName.TextScaled = true
    UserDisplayName.TextSize = 10.000
    UserDisplayName.TextWrapped = true
    UserDisplayName.TextXAlignment = Enum.TextXAlignment.Left
    UserDisplayName.TextTransparency = 0.3

    -- Load user avatar
    local function loadUserAvatar()
        local userId = LocalPlayer.UserId
        local thumbType = Enum.ThumbnailType.HeadShot
        local thumbSize = Enum.ThumbnailSize.Size60x60
        
        local success, result = pcall(function()
            return Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)
        end)
        
        if success then
            UserAvatar.Image = result
        else
            UserAvatar.Image = "rbxasset://textures/face.png"
        end
    end

    loadUserAvatar()

    if LocalPlayer.DisplayName ~= LocalPlayer.Name then
        UserDisplayName.Text = LocalPlayer.DisplayName
    else
        UserDisplayName.Text = "@" .. LocalPlayer.Name
    end

    container.Container.InputBegan:Connect(function(input: InputObject)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Limitless.dragging = true
            Limitless.drag_position = input.Position
            Limitless.start_position = container.Container.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Limitless.dragging = false
                    Limitless.drag_position = nil
                    Limitless.start_position = nil
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(function(input: InputObject)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            Limitless.drag({
                input = input,
                container = container
            })
        end
    end)

    UserInputService.InputBegan:Connect(function(input: InputObject, process: boolean)
        if process then return end
        if not Limitless.exist() then return end
        if input.KeyCode == Enum.KeyCode.Insert then
            Limitless.visible(container)
        end
    end)

    mobile_button.MouseButton1Click:Connect(function()
        Limitless.visible(container)
    end)
    
    -- Play startup sound and effects
    Limitless:play_startup_sound()
    Limitless:create_startup_effects(container)

    local Window = {}
    
    -- Added window methods
    function Window:SetBackgroundImage(imageId)
        if self.Container then
            local bg = Instance.new("ImageLabel")
            bg.Size = UDim2.new(1, 0, 1, 0)
            bg.BackgroundTransparency = 1
            bg.Image = imageId
            bg.Parent = self.Container
            bg.ZIndex = -1
        end
    end
    
    function Window:SetBackgroundImageTransparency(transparency)
        local bg = self.Container:FindFirstChild("ImageLabel")
        if bg then
            bg.ImageTransparency = transparency
        end
    end
    
    function Window:SetToggleKey(keyCode)
        UserInputService.InputBegan:Connect(function(input, processed)
            if processed then return end
            if input.KeyCode == keyCode then
                Limitless.visible(container)
            end
        end)
    end
    
    function Window:ToggleTransparency(enabled)
        if self.Container then
            self.Container.BackgroundTransparency = enabled and 0.5 or 0
        end
    end
    
    function Window:IsResizable(enabled)
        -- Implement resizable logic
    end
    
    function Window:SelectTab(tabNumber)
        local tabs = container.Container.Tabs:GetChildren()
        local tabCount = 0
        for _, tab in ipairs(tabs) do
            if tab:IsA("TextButton") and tab.Name == "Tab" then
                tabCount = tabCount + 1
                if tabCount == tabNumber then
                    tab.MouseButton1Click:Fire()
                    break
                end
            end
        end
    end
    
    -- Added Tag function
    function Window:Tag(options)
        local title = options.Title or "Tag"
        local color = options.Color or Color3.fromRGB(48, 255, 106)
        
        local tag = Instance.new("Frame")
        tag.Size = UDim2.new(0, 60, 0, 20)
        tag.Position = UDim2.new(1, -70, 0, 10)
        tag.BackgroundColor3 = color
        tag.BorderSizePixel = 0
        tag.Parent = container.Container
        
        local tagCorner = Instance.new("UICorner")
        tagCorner.CornerRadius = UDim.new(0, 10)
        tagCorner.Parent = tag
        
        local tagLabel = Instance.new("TextLabel")
        tagLabel.Size = UDim2.new(1, 0, 1, 0)
        tagLabel.BackgroundTransparency = 1
        tagLabel.Text = title
        tagLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        tagLabel.TextScaled = true
        tagLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Bold)
        tagLabel.Parent = tag
        
        return tag
    end
    
    -- Enhanced Tab function
    function Window:Tab(options)
        local title = options.Title or "Tab"
        local icon = options.Icon or "bird"
        
        local tab = Instance.new("TextButton")
        tab.Name = "Tab"
        tab.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
        tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tab.BorderSizePixel = 0
        tab.Size = UDim2.new(0, 174, 0, 40)
        tab.ZIndex = 2
        tab.AutoButtonColor = false
        tab.Font = Enum.Font.SourceSans
        tab.Text = ""
        tab.TextColor3 = Color3.fromRGB(0, 0, 0)
        tab.TextSize = 14.000
        tab.Parent = tabs

        local tabCorner = Instance.new("UICorner")
        tabCorner.CornerRadius = UDim.new(0, 5)
        tabCorner.Parent = tab

        local TextLabel = Instance.new("TextLabel")
        TextLabel.Parent = tab
        TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0.58965224, 0, 0.5, 0)
        TextLabel.Size = UDim2.new(0, 124, 0, 15)
        TextLabel.ZIndex = 3
        TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
        TextLabel.Text = title
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextTransparency = 0.300
        TextLabel.TextWrapped = true
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left

        local Logo = Instance.new("ImageLabel")
        Logo.Name = "Logo"
        Logo.Parent = tab
        Logo.AnchorPoint = Vector2.new(0.5, 0.5)
        Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Logo.BackgroundTransparency = 1.000
        Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Logo.BorderSizePixel = 0
        Logo.Position = UDim2.new(0.130999997, 0, 0.5, 0)
        Logo.Size = UDim2.new(0, 17, 0, 17)
        Logo.ZIndex = 3
        Logo.Image = "rbxassetid://17290697757"
        Logo.ImageTransparency = 0.3001

        local Glow = Instance.new("ImageLabel")
        Glow.Name = "Glow"
        Glow.Parent = tab
        Glow.AnchorPoint = Vector2.new(0.5, 0.5)
        Glow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Glow.BackgroundTransparency = 1.000
        Glow.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Glow.BorderSizePixel = 0
        Glow.Position = UDim2.new(0.5, 0, 0.5, 0)
        Glow.Size = UDim2.new(0, 190, 0, 53)
        Glow.Image = "rbxassetid://17290723539"
        Glow.ImageTransparency = 1.000

        local Fill = Instance.new("Frame")
        Fill.Name = "Fill"
        Fill.Parent = tab
        Fill.AnchorPoint = Vector2.new(0.5, 0.5)
        Fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Fill.BackgroundTransparency = 1.000
        Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Fill.BorderSizePixel = 0
        Fill.Position = UDim2.new(0.5, 0, 0.5, 0)
        Fill.Size = UDim2.new(0, 174, 0, 40)
        Fill.ZIndex = 2

        local UICorner_2 = Instance.new("UICorner")
        UICorner_2.CornerRadius = UDim.new(0, 10)
        UICorner_2.Parent = Fill

        local UIGradient = Instance.new("UIGradient")
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(66, 89, 182)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(37, 57, 137))}
        UIGradient.Rotation = 20
        UIGradient.Parent = Fill

        local left_section = Instance.new("ScrollingFrame")
        left_section.Name = "LeftSection"
        left_section.Active = true
        left_section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        left_section.BackgroundTransparency = 1.000
        left_section.BorderColor3 = Color3.fromRGB(0, 0, 0)
        left_section.BorderSizePixel = 0
        left_section.Position = UDim2.new(0.326180249, 0, 0.126760557, 0)
        left_section.Size = UDim2.new(0, 215, 0, 372)
        left_section.AutomaticCanvasSize = Enum.AutomaticSize.XY
        left_section.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
        left_section.ScrollBarThickness = 0

        local leftsectionlist = Instance.new("UIListLayout")
        leftsectionlist.Parent = left_section
        leftsectionlist.HorizontalAlignment = Enum.HorizontalAlignment.Center
        leftsectionlist.SortOrder = Enum.SortOrder.LayoutOrder
        leftsectionlist.Padding = UDim.new(0, 7)

        local right_section = Instance.new("ScrollingFrame")
        right_section.Name = "RightSection"
        right_section.Active = true
        right_section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        right_section.BackgroundTransparency = 1.000
        right_section.BorderColor3 = Color3.fromRGB(0, 0, 0)
        right_section.BorderSizePixel = 0
        right_section.Position = UDim2.new(0.662374794, 0, 0.126760557, 0)
        right_section.Size = UDim2.new(0, 215, 0, 372)
        right_section.AutomaticCanvasSize = Enum.AutomaticSize.XY
        right_section.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
        right_section.ScrollBarThickness = 0

        local rightsectionlist = Instance.new("UIListLayout")
        rightsectionlist.Parent = right_section
        rightsectionlist.HorizontalAlignment = Enum.HorizontalAlignment.Center
        rightsectionlist.SortOrder = Enum.SortOrder.LayoutOrder
        rightsectionlist.Padding = UDim.new(0, 7)

        left_section.Visible = false
        right_section.Visible = false

        left_section.Parent = container.Container
        right_section.Parent = container.Container

        tab.MouseButton1Click:Connect(function()
            for _, object in container.Container:GetChildren() do
                if not object.Name:find("Section") then
                    continue
                end
                object.Visible = false
            end
            left_section.Visible = true
            right_section.Visible = true
            TweenService:Create(tab.Fill, TweenInfo.new(0.4), {
                BackgroundTransparency = 0
            }):Play()
            TweenService:Create(tab.Glow, TweenInfo.new(0.4), {
                ImageTransparency = 0
            }):Play()
            TweenService:Create(tab.TextLabel, TweenInfo.new(0.4), {
                TextTransparency = 0
            }):Play()
            TweenService:Create(tab.Logo, TweenInfo.new(0.4), {
                ImageTransparency = 0
            }):Play()
            for _, object in tabs:GetChildren() do
                if object.Name ~= 'Tab' then
                    continue
                end
                if object == tab then
                    continue
                end
                TweenService:Create(object.Fill, TweenInfo.new(0.4), {
                    BackgroundTransparency = 1
                }):Play()
                TweenService:Create(object.Glow, TweenInfo.new(0.4), {
                    ImageTransparency = 1
                }):Play()
                
                TweenService:Create(object.TextLabel, TweenInfo.new(0.4), {
                    TextTransparency = 0.5
                }):Play()
                
                TweenService:Create(object.Logo, TweenInfo.new(0.4), {
                    ImageTransparency = 0.5
                }):Play()
            end
        end)
        
        local Tab = {}
        
        -- Added Section function
        function Tab:Section(options)
            local sectionTitle = options.Title or "Section"
            local opened = options.Opened ~= false
            
            local Section = {}
            
            function Section:SetTitle(newTitle)
                -- Implementation for setting section title
            end
            
            function Section:Destroy()
                -- Implementation for destroying section
            end
            
            return Section
        end
        
        -- Added all UI element functions
        function Tab:Button(options)
            local title = options.Title or "Button"
            local desc = options.Description or ""
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            local button = Instance.new("TextButton")
            button.Name = "Button"
            button.Parent = section
            button.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            button.BorderColor3 = Color3.fromRGB(0, 0, 0)
            button.BorderSizePixel = 0
            button.Size = UDim2.new(0, 215, 0, 37)
            button.AutoButtonColor = false
            button.Font = Enum.Font.SourceSans
            button.Text = ""
            button.TextColor3 = Color3.fromRGB(0, 0, 0)
            button.TextSize = 14.000

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 10)
            UICorner.Parent = button

            local ButtonGlow = Instance.new("ImageLabel")
            ButtonGlow.Name = "Glow"
            ButtonGlow.Parent = button
            ButtonGlow.AnchorPoint = Vector2.new(0.5, 0.5)
            ButtonGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonGlow.BackgroundTransparency = 1.000
            ButtonGlow.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonGlow.BorderSizePixel = 0
            ButtonGlow.Position = UDim2.new(0.5, 0, 0.5, 0)
            ButtonGlow.Size = UDim2.new(0, 235, 0, 57)
            ButtonGlow.ZIndex = 0
            ButtonGlow.Image = "rbxassetid://17290723539"
            ButtonGlow.ImageTransparency = 1.000

            local ButtonFill = Instance.new("Frame")
            ButtonFill.Name = "Fill"
            ButtonFill.Parent = button
            ButtonFill.AnchorPoint = Vector2.new(0.5, 0.5)
            ButtonFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonFill.BackgroundTransparency = 1.000
            ButtonFill.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonFill.BorderSizePixel = 0
            ButtonFill.Position = UDim2.new(0.5, 0, 0.5, 0)
            ButtonFill.Size = UDim2.new(0, 215, 0, 37)
            ButtonFill.ZIndex = 1

            local ButtonFillCorner = Instance.new("UICorner")
            ButtonFillCorner.CornerRadius = UDim.new(0, 10)
            ButtonFillCorner.Parent = ButtonFill

            local ButtonGradient = Instance.new("UIGradient")
            ButtonGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(66, 89, 182)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(37, 57, 137))}
            ButtonGradient.Rotation = 20
            ButtonGradient.Parent = ButtonFill

            local TextLabel = Instance.new("TextLabel")
            TextLabel.Parent = button
            TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
            TextLabel.Size = UDim2.new(0, 195, 0, 15)
            TextLabel.ZIndex = 2
            TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextScaled = true
            TextLabel.TextSize = 14.000
            TextLabel.TextWrapped = true
            TextLabel.TextXAlignment = Enum.TextXAlignment.Center
            TextLabel.Text = title

            button.MouseEnter:Connect(function()
                TweenService:Create(ButtonGlow, TweenInfo.new(0.3), {
                    ImageTransparency = 0.7
                }):Play()
                TweenService:Create(ButtonFill, TweenInfo.new(0.3), {
                    BackgroundTransparency = 0.9
                }):Play()
            end)

            button.MouseLeave:Connect(function()
                TweenService:Create(ButtonGlow, TweenInfo.new(0.3), {
                    ImageTransparency = 1
                }):Play()
                TweenService:Create(ButtonFill, TweenInfo.new(0.3), {
                    BackgroundTransparency = 1
                }):Play()
            end)

            button.MouseButton1Click:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.1), {
                    Size = UDim2.new(0, 210, 0, 35)
                }):Play()
                TweenService:Create(ButtonFill, TweenInfo.new(0.2), {
                    BackgroundTransparency = 0.8
                }):Play()
                
                task.wait(0.1)
                
                TweenService:Create(button, TweenInfo.new(0.1), {
                    Size = UDim2.new(0, 215, 0, 37)
                }):Play()
                TweenService:Create(ButtonFill, TweenInfo.new(0.2), {
                    BackgroundTransparency = 1
                }):Play()
                
                callback()
            end)
            
            local Button = {}
            
            function Button:SetTitle(newTitle)
                -- Implementation
            end
            
            function Button:SetDesc(newDesc)
                -- Implementation  
            end
            
            function Button:Lock()
                -- Implementation
            end
            
            function Button:Unlock()
                -- Implementation
            end
            
            function Button:Destroy()
                -- Implementation
            end
            
            return Button
        end
        
        function Tab:Toggle(options)
            local title = options.Title or "Toggle"
            local desc = options.Description or ""
            local default = options.Default or false
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            local toggle = Instance.new("TextButton")
            toggle.Name = "Toggle"
            toggle.Parent = section
            toggle.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
            toggle.BorderSizePixel = 0
            toggle.Size = UDim2.new(0, 215, 0, 37)
            toggle.AutoButtonColor = false
            toggle.Font = Enum.Font.SourceSans
            toggle.Text = ""
            toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            toggle.TextSize = 14.000

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 10)
            UICorner.Parent = toggle
            
            local Checkbox = Instance.new("Frame")
            Checkbox.Name = "Checkbox"
            Checkbox.Parent = toggle
            Checkbox.AnchorPoint = Vector2.new(0.5, 0.5)
            Checkbox.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
            Checkbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Checkbox.BorderSizePixel = 0
            Checkbox.Position = UDim2.new(0.915000021, 0, 0.5, 0)
            Checkbox.Size = UDim2.new(0, 17, 0, 17)
                
            local UICorner_2 = Instance.new("UICorner")
            UICorner_2.CornerRadius = UDim.new(0, 4)
            UICorner_2.Parent = Checkbox

            local Glow = Instance.new("ImageLabel")
            Glow.Name = "Glow"
            Glow.Parent = Checkbox
            Glow.AnchorPoint = Vector2.new(0.5, 0.5)
            Glow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Glow.BackgroundTransparency = 1.000
            Glow.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Glow.BorderSizePixel = 0
            Glow.Position = UDim2.new(0.5, 0, 0.5, 0)
            Glow.Size = UDim2.new(0, 27, 0, 27)
            Glow.Image = "rbxassetid://17290798394"
            Glow.ImageTransparency = 1.000

            local Fill = Instance.new("Frame")
            Fill.Name = "Fill"
            Fill.Parent = Checkbox
            Fill.AnchorPoint = Vector2.new(0.5, 0.5)
            Fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Fill.BackgroundTransparency = 1.000
            Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Fill.BorderSizePixel = 0
            Fill.Position = UDim2.new(0.5, 0, 0.5, 0)
            Fill.Size = UDim2.new(0, 17, 0, 17)

            local UICorner_3 = Instance.new("UICorner")
            UICorner_3.CornerRadius = UDim.new(0, 4)
            UICorner_3.Parent = Fill

            local UIGradient = Instance.new("UIGradient")
            UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(66, 89, 182)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(37, 57, 137))}
            UIGradient.Rotation = 20
            UIGradient.Parent = Fill

            local TextLabel = Instance.new("TextLabel")
            TextLabel.Parent = toggle
            TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.444953382, 0, 0.5, 0)
            TextLabel.Size = UDim2.new(0, 164, 0, 15)
            TextLabel.ZIndex = 2
            TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextScaled = true
            TextLabel.TextSize = 14.000
            TextLabel.TextWrapped = true
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left
            TextLabel.Text = title

            local function enable_toggle()
                TweenService:Create(Checkbox.Fill, TweenInfo.new(0.4), {
                    BackgroundTransparency = 0
                }):Play()
                TweenService:Create(Checkbox.Glow, TweenInfo.new(0.4), {
                    ImageTransparency = 0
                }):Play()
            end

            local function disable_toggle()
                TweenService:Create(Checkbox.Fill, TweenInfo.new(0.4), {
                    BackgroundTransparency = 1
                }):Play()
                TweenService:Create(Checkbox.Glow, TweenInfo.new(0.4), {
                    ImageTransparency = 1
                }):Play()
            end

            local state = default
            if state then
                enable_toggle()
            else
                disable_toggle()
            end

            toggle.MouseButton1Click:Connect(function()
                state = not state
                if state then
                    enable_toggle()
                else
                    disable_toggle()
                end
                callback(state)
            end)
            
            local Toggle = {}
            
            function Toggle:SetTitle(newTitle)
                -- Implementation
            end
            
            function Toggle:SetDesc(newDesc)
                -- Implementation
            end
            
            function Toggle:SetValue(value)
                -- Implementation
            end
            
            function Toggle:Lock()
                -- Implementation
            end
            
            function Toggle:Unlock()
                -- Implementation
            end
            
            function Toggle:Destroy()
                -- Implementation
            end
            
            return Toggle
        end
        
        function Tab:Slider(options)
            local title = options.Title or "Slider"
            local desc = options.Description or ""
            local default = options.Default or 50
            local min = options.Min or 0
            local max = options.Max or 100
            local rounding = options.Rounding or 1
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            local slider = Instance.new("TextButton")
            slider.Name = "Slider"
            slider.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
            slider.BorderSizePixel = 0
            slider.Size = UDim2.new(0, 215, 0, 48)
            slider.AutoButtonColor = false
            slider.Font = Enum.Font.SourceSans
            slider.Text = ""
            slider.TextColor3 = Color3.fromRGB(0, 0, 0)
            slider.TextSize = 14.000
            slider.Parent = section

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 10)
            UICorner.Parent = slider

            local Box = Instance.new("Frame")
            Box.Name = "Box"
            Box.Parent = slider
            Box.AnchorPoint = Vector2.new(0.5, 0.5)
            Box.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
            Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Box.BorderSizePixel = 0
            Box.Position = UDim2.new(0.508023143, 0, 0.708333313, 0)
            Box.Size = UDim2.new(0, 192, 0, 6)

            local UICorner_2 = Instance.new("UICorner")
            UICorner_2.CornerRadius = UDim.new(0, 15)
            UICorner_2.Parent = Box

            local Glow = Instance.new("ImageLabel")
            Glow.Name = "Glow"
            Glow.Parent = Box
            Glow.AnchorPoint = Vector2.new(0.5, 0.5)
            Glow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Glow.BackgroundTransparency = 1.000
            Glow.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Glow.BorderSizePixel = 0
            Glow.Position = UDim2.new(0.5, 0, 0.5, 0)
            Glow.Size = UDim2.new(0, 204, 0, 17)
            Glow.ZIndex = 2
            Glow.Image = "rbxassetid://17381990533"

            local UIGradient = Instance.new("UIGradient")
            UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.50, 0.00), NumberSequenceKeypoint.new(0.53, 1.00), NumberSequenceKeypoint.new(1.00, 1.00)}
            UIGradient.Parent = Glow

            local Fill = Instance.new("ImageLabel")
            Fill.Name = "Fill"
            Fill.Parent = Box
            Fill.AnchorPoint = Vector2.new(0, 0.5)
            Fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Fill.BackgroundTransparency = 1.000
            Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Fill.BorderSizePixel = 0
            Fill.Position = UDim2.new(0, 0, 0.5, 0)
            Fill.Size = UDim2.new(0, 192, 0, 6)
            Fill.Image = "rbxassetid://17382033116"

            local UICorner_3 = Instance.new("UICorner")
            UICorner_3.CornerRadius = UDim.new(0, 4)
            UICorner_3.Parent = Fill

            local UIGradient_2 = Instance.new("UIGradient")
            UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.50, 0.00), NumberSequenceKeypoint.new(0.50, 1.00), NumberSequenceKeypoint.new(1.00, 1.00)}
            UIGradient_2.Parent = Fill
                    
            local Hitbox = Instance.new("TextButton")
            Hitbox.Name = "Hitbox"
            Hitbox.Parent = Box
            Hitbox.AnchorPoint = Vector2.new(0.5, 0.5)
            Hitbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hitbox.BackgroundTransparency = 1.000
            Hitbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Hitbox.BorderSizePixel = 0
            Hitbox.Position = UDim2.new(0.5, 0, 0.5, 0)
            Hitbox.Size = UDim2.new(0, 200, 0, 13)
            Hitbox.ZIndex = 3
            Hitbox.AutoButtonColor = false
            Hitbox.Font = Enum.Font.SourceSans
            Hitbox.Text = ""
            Hitbox.TextColor3 = Color3.fromRGB(0, 0, 0)
            Hitbox.TextSize = 14.000

            local TextLabel = Instance.new("TextLabel")
            TextLabel.Parent = slider
            TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.414720833, 0, 0.375, 0)
            TextLabel.Size = UDim2.new(0, 151, 0, 15)
            TextLabel.ZIndex = 2
            TextLabel.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextScaled = true
            TextLabel.TextSize = 14.000
            TextLabel.TextWrapped = true
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left

            local Number = Instance.new("TextLabel")
            Number.Name = "Number"
            Number.Parent = slider
            Number.AnchorPoint = Vector2.new(0.5, 0.5)
            Number.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Number.BackgroundTransparency = 1.000
            Number.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Number.BorderSizePixel = 0
            Number.Position = UDim2.new(0.854255736, 0, 0.375, 0)
            Number.Size = UDim2.new(0, 38, 0, 15)
            Number.ZIndex = 2
            Number.FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold)
            Number.TextColor3 = Color3.fromRGB(255, 255, 255)
            Number.TextScaled = true
            Number.TextSize = 14.000
            Number.TextWrapped = true
            Number.TextXAlignment = Enum.TextXAlignment.Right

            TextLabel.Text = title
            Number.Text = default

            local function update_slider()
                local result = math.clamp((Mouse.X - Box.AbsolutePosition.X) / Box.AbsoluteSize.X, 0, 1)
                if not result then
                    return
                end
                local number = math.floor(((max - min) * result) + min)
                local slider_size = math.clamp(result, 0.001, 0.999)
                    
                Fill.UIGradient.Transparency = NumberSequence.new({
                    NumberSequenceKeypoint.new(0.0, 0),
                    NumberSequenceKeypoint.new(slider_size, 0),
                    NumberSequenceKeypoint.new(math.min(slider_size + 0.001, 1), 1),
                    NumberSequenceKeypoint.new(1, 1)
                })
                    
                Glow.UIGradient.Transparency = NumberSequence.new({
                    NumberSequenceKeypoint.new(0.0, 0),
                    NumberSequenceKeypoint.new(slider_size, 0),
                    NumberSequenceKeypoint.new(math.min(slider_size + 0.03, 1), 1),
                    NumberSequenceKeypoint.new(1, 1)
                })

                Number.Text = number
                callback(number)
            end

            local drag = false
            Hitbox.MouseButton1Down:Connect(function()
                drag = true
                repeat
                    update_slider()
                    RunService.RenderStepped:Wait()
                until not drag
            end)

            Hitbox.MouseButton1Up:Connect(function()
                drag = false
            end)

            Hitbox.MouseLeave:Connect(function()
                drag = false
            end)
            
            local Slider = {}
            
            function Slider:SetTitle(newTitle)
                -- Implementation
            end
            
            function Slider:SetDesc(newDesc)
                -- Implementation
            end
            
            function Slider:SetValue(value)
                -- Implementation
            end
            
            function Slider:Lock()
                -- Implementation
            end
            
            function Slider:Unlock()
                -- Implementation
            end
            
            function Slider:Destroy()
                -- Implementation
            end
            
            return Slider
        end
        
        -- Added new UI elements
        function Tab:Colorpicker(options)
            local title = options.Title or "Colorpicker"
            local desc = options.Description or ""
            local default = options.Default or Color3.fromRGB(255, 255, 255)
            local transparency = options.Transparency
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            
            local colorpicker = Instance.new("TextButton")
            colorpicker.Name = "Colorpicker"
            colorpicker.Size = UDim2.new(0, 215, 0, 37)
            colorpicker.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            colorpicker.BorderSizePixel = 0
            colorpicker.AutoButtonColor = false
            colorpicker.Text = ""
            colorpicker.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = colorpicker
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(0, 150, 0, 15)
            titleLabel.Position = UDim2.new(0, 15, 0.5, -7.5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.SemiBold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = colorpicker
            
            local colorDisplay = Instance.new("Frame")
            colorDisplay.Size = UDim2.new(0, 25, 0, 25)
            colorDisplay.Position = UDim2.new(1, -35, 0.5, -12.5)
            colorDisplay.BackgroundColor3 = default
            colorDisplay.BorderSizePixel = 0
            colorDisplay.Parent = colorpicker
            
            local displayCorner = Instance.new("UICorner")
            displayCorner.CornerRadius = UDim.new(0, 5)
            displayCorner.Parent = colorDisplay
            
            local Colorpicker = {}
            
            function Colorpicker:SetTitle(newTitle)
                titleLabel.Text = newTitle
            end
            
            function Colorpicker:SetValue(color)
                colorDisplay.BackgroundColor3 = color
                callback(color)
            end
            
            return Colorpicker
        end
        
        function Tab:Dropdown(options)
            local title = options.Title or "Dropdown"
            local desc = options.Description or ""
            local values = options.Values or {"Option 1", "Option 2"}
            local multi = options.Multi or false
            local default = options.Default or values[1]
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            
            local dropdown = Instance.new("TextButton")
            dropdown.Name = "Dropdown"
            dropdown.Size = UDim2.new(0, 215, 0, 37)
            dropdown.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            dropdown.BorderSizePixel = 0
            dropdown.AutoButtonColor = false
            dropdown.Text = ""
            dropdown.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = dropdown
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(0, 120, 0, 15)
            titleLabel.Position = UDim2.new(0, 15, 0.5, -7.5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.SemiBold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = dropdown
            
            local valueLabel = Instance.new("TextLabel")
            valueLabel.Size = UDim2.new(0, 70, 0, 15)
            valueLabel.Position = UDim2.new(1, -85, 0.5, -7.5)
            valueLabel.BackgroundTransparency = 1
            valueLabel.Text = default
            valueLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            valueLabel.TextScaled = true
            valueLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Regular)
            valueLabel.TextXAlignment = Enum.TextXAlignment.Right
            valueLabel.Parent = dropdown
            
            local Dropdown = {}
            
            function Dropdown:SetTitle(newTitle)
                titleLabel.Text = newTitle
            end
            
            function Dropdown:SetValue(value)
                valueLabel.Text = value
                callback(value)
            end
            
            function Dropdown:Refresh(newValues)
                values = newValues
            end
            
            return Dropdown
        end
        
        function Tab:Input(options)
            local title = options.Title or "Input"
            local desc = options.Description or ""
            local default = options.Default or ""
            local placeholder = options.Placeholder or "Enter text..."
            local numeric = options.Numeric or false
            local finished = options.Finished or false
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            
            local input = Instance.new("Frame")
            input.Name = "Input"
            input.Size = UDim2.new(0, 215, 0, 37)
            input.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            input.BorderSizePixel = 0
            input.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = input
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(0, 80, 0, 15)
            titleLabel.Position = UDim2.new(0, 15, 0.5, -7.5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.SemiBold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = input
            
            local textBox = Instance.new("TextBox")
            textBox.Size = UDim2.new(0, 110, 0, 25)
            textBox.Position = UDim2.new(1, -120, 0.5, -12.5)
            textBox.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
            textBox.BorderSizePixel = 0
            textBox.Text = default
            textBox.PlaceholderText = placeholder
            textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            textBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
            textBox.TextScaled = true
            textBox.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Regular)
            textBox.Parent = input
            
            local textBoxCorner = Instance.new("UICorner")
            textBoxCorner.CornerRadius = UDim.new(0, 5)
            textBoxCorner.Parent = textBox
            
            local Input = {}
            
            function Input:SetTitle(newTitle)
                titleLabel.Text = newTitle
            end
            
            function Input:SetValue(value)
                textBox.Text = value
            end
            
            if finished then
                textBox.FocusLost:Connect(function()
                    callback(textBox.Text)
                end)
            else
                textBox:GetPropertyChangedSignal("Text"):Connect(function()
                    callback(textBox.Text)
                end)
            end
            
            return Input
        end
        
        function Tab:Keybind(options)
            local title = options.Title or "Keybind"
            local desc = options.Description or ""
            local default = options.Default or Enum.KeyCode.F
            local hold = options.Hold or false
            local callback = options.Callback or function() end
            
            local section = options.Section == 'right' and right_section or left_section
            
            local keybind = Instance.new("TextButton")
            keybind.Name = "Keybind"
            keybind.Size = UDim2.new(0, 215, 0, 37)
            keybind.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            keybind.BorderSizePixel = 0
            keybind.AutoButtonColor = false
            keybind.Text = ""
            keybind.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = keybind
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(0, 120, 0, 15)
            titleLabel.Position = UDim2.new(0, 15, 0.5, -7.5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.SemiBold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = keybind
            
            local keyLabel = Instance.new("TextLabel")
            keyLabel.Size = UDim2.new(0, 70, 0, 15)
            keyLabel.Position = UDim2.new(1, -85, 0.5, -7.5)
            keyLabel.BackgroundTransparency = 1
            keyLabel.Text = default.Name
            keyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            keyLabel.TextScaled = true
            keyLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Regular)
            keyLabel.TextXAlignment = Enum.TextXAlignment.Right
            keyLabel.Parent = keybind
            
            local Keybind = {}
            
            function Keybind:SetTitle(newTitle)
                titleLabel.Text = newTitle
            end
            
            function Keybind:SetValue(keyCode)
                keyLabel.Text = keyCode.Name
                default = keyCode
            end
            
            UserInputService.InputBegan:Connect(function(input, processed)
                if processed then return end
                if input.KeyCode == default then
                    if hold then
                        callback(true)
                    else
                        callback()
                    end
                end
            end)
            
            if hold then
                UserInputService.InputEnded:Connect(function(input, processed)
                    if processed then return end
                    if input.KeyCode == default then
                        callback(false)
                    end
                end)
            end
            
            return Keybind
        end
        
        function Tab:Paragraph(options)
            local title = options.Title or "Paragraph"
            local content = options.Content or "This is a paragraph."
            local image = options.Image
            local imageSize = options.ImageSize or UDim2.new(0, 50, 0, 50)
            
            local section = options.Section == 'right' and right_section or left_section
            
            local paragraph = Instance.new("Frame")
            paragraph.Name = "Paragraph"
            paragraph.Size = UDim2.new(0, 215, 0, 80)
            paragraph.BackgroundColor3 = Color3.fromRGB(27, 28, 33)
            paragraph.BorderSizePixel = 0
            paragraph.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = paragraph
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(1, -20, 0, 20)
            titleLabel.Position = UDim2.new(0, 10, 0, 5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Bold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = paragraph
            
            local contentLabel = Instance.new("TextLabel")
            contentLabel.Size = UDim2.new(1, -20, 0, 50)
            contentLabel.Position = UDim2.new(0, 10, 0, 25)
            contentLabel.BackgroundTransparency = 1
            contentLabel.Text = content
            contentLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            contentLabel.TextScaled = false
            contentLabel.TextSize = 12
            contentLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Regular)
            contentLabel.TextWrapped = true
            contentLabel.TextXAlignment = Enum.TextXAlignment.Left
            contentLabel.TextYAlignment = Enum.TextYAlignment.Top
            contentLabel.Parent = paragraph
            
            if image then
                local imageLabel = Instance.new("ImageLabel")
                imageLabel.Size = imageSize
                imageLabel.Position = UDim2.new(1, -imageSize.X.Offset - 10, 0, 5)
                imageLabel.BackgroundTransparency = 1
                imageLabel.Image = image
                imageLabel.Parent = paragraph
                
                local imageCorner = Instance.new("UICorner")
                imageCorner.CornerRadius = UDim.new(0, 5)
                imageCorner.Parent = imageLabel
            end
            
            local Paragraph = {}
            
            function Paragraph:SetTitle(newTitle)
                titleLabel.Text = newTitle
            end
            
            function Paragraph:SetContent(newContent)
                contentLabel.Text = newContent
            end
            
            return Paragraph
        end
        
        function Tab:Code(options)
            local title = options.Title or "Code"
            local content = options.Content or "print('Hello World')"
            local language = options.Language or "lua"
            
            local section = options.Section == 'right' and right_section or left_section
            
            local code = Instance.new("Frame")
            code.Name = "Code"
            code.Size = UDim2.new(0, 215, 0, 100)
            code.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
            code.BorderSizePixel = 0
            code.Parent = section
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 10)
            corner.Parent = code
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(1, -20, 0, 20)
            titleLabel.Position = UDim2.new(0, 10, 0, 5)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = title .. " (" .. language .. ")"
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.TextScaled = true
            titleLabel.FontFace = Font.new(Limitless.currentFont, Enum.FontWeight.Bold)
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = code
            
            local codeLabel = Instance.new("TextLabel")
            codeLabel.Size = UDim2.new(1, -20, 0, 70)
            codeLabel.Position = UDim2.new(0, 10, 0, 25)
            codeLabel.BackgroundTransparency = 1
            codeLabel.Text = content
            codeLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
            codeLabel.TextScaled = false
            codeLabel.TextSize = 11
            codeLabel.FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.Regular)
            codeLabel.TextWrapped = true
            codeLabel.TextXAlignment = Enum.TextXAlignment.Left
            codeLabel.TextYAlignment = Enum.TextYAlignment.Top
            codeLabel.Parent = code
            
            local Code = {}
            
            function Code:SetTitle(newTitle)
                titleLabel.Text = newTitle .. " (" .. language .. ")"
            end
            
            function Code:SetContent(newContent)
                codeLabel.Text = newContent
            end
            
            return Code
        end
        
        return Tab
    end
    
    return Window
end

return Limitless
